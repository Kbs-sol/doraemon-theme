// Enhanced Main JavaScript for User Experience\nclass DoraemonMoviesApp {\n    constructor() {\n        this.movies = [];\n        this.loading = false;\n        this.sessionId = this.generateSessionId();\n        this.init();\n    }\n\n    init() {\n        this.setupEventListeners();\n        this.loadMovies();\n        this.trackPageView();\n        this.initializeLazyLoading();\n        this.setupServiceWorker();\n        this.initializeTooltips();\n        console.log('ðŸ¤– Doraemon Movies App initialized');\n    }\n\n    setupEventListeners() {\n        // Search functionality\n        const searchInput = document.getElementById('search-input');\n        if (searchInput) {\n            searchInput.addEventListener('input', this.debounce(this.handleSearch.bind(this), 300));\n        }\n\n        // Filter buttons\n        document.querySelectorAll('.filter-btn').forEach(btn => {\n            btn.addEventListener('click', this.handleFilter.bind(this));\n        });\n\n        // Back to top button\n        this.setupBackToTop();\n\n        // Offline detection\n        window.addEventListener('online', this.handleOnline.bind(this));\n        window.addEventListener('offline', this.handleOffline.bind(this));\n\n        // Responsive navigation\n        this.setupMobileNav();\n\n        // Intersection Observer for animations\n        this.setupScrollAnimations();\n\n        // Error boundary for JavaScript errors\n        window.addEventListener('error', this.handleError.bind(this));\n        window.addEventListener('unhandledrejection', this.handleUnhandledRejection.bind(this));\n    }\n\n    async loadMovies() {\n        this.showLoadingState();\n        \n        try {\n            const response = await axios.get('/api/movies');\n            \n            if (response.data.success) {\n                this.movies = response.data.movies;\n                this.renderMovies(this.movies);\n                this.trackEvent('movies_loaded', { count: this.movies.length });\n            } else {\n                throw new Error(response.data.error || 'Failed to load movies');\n            }\n        } catch (error) {\n            console.error('Failed to load movies:', error);\n            this.showError('Failed to load movies. Please refresh the page.', true);\n            this.trackEvent('movies_load_error', { error: error.message });\n        } finally {\n            this.hideLoadingState();\n        }\n    }\n\n    renderMovies(movies) {\n        const container = document.getElementById('movies-grid');\n        if (!container) return;\n\n        if (movies.length === 0) {\n            container.innerHTML = this.getEmptyState();\n            return;\n        }\n\n        const moviesHtml = movies.map(movie => this.createMovieCard(movie)).join('');\n        container.innerHTML = moviesHtml;\n\n        // Initialize lazy loading for new images\n        this.initializeLazyLoading();\n        \n        // Add entrance animations\n        this.animateMovieCards();\n    }\n\n    createMovieCard(movie) {\n        const hasVideo = movie.video_embed_url || movie.telegram_file_id;\n        const posterUrl = movie.poster_url || '/static/images/placeholder-movie.jpg';\n        \n        return `\n            <div class=\"movie-card bg-white rounded-lg shadow-md overflow-hidden transform transition-all duration-300 hover:shadow-xl hover:-translate-y-2\" data-movie-id=\"${movie.id}\">\n                <div class=\"relative group\">\n                    <img \n                        src=\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='300' height='400'%3E%3Crect width='300' height='400' fill='%23f3f4f6'/%3E%3C/svg%3E\"\n                        data-src=\"${posterUrl}\" \n                        alt=\"${movie.title}\" \n                        class=\"lazy-load w-full h-64 object-cover transition-transform duration-300 group-hover:scale-105\"\n                        loading=\"lazy\"\n                    >\n                    <div class=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                    \n                    ${hasVideo ? `\n                        <div class=\"absolute top-3 right-3\">\n                            <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n                                <i class=\"fas fa-play mr-1\"></i>Available\n                            </span>\n                        </div>\n                    ` : `\n                        <div class=\"absolute top-3 right-3\">\n                            <span class=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n                                <i class=\"fas fa-clock mr-1\"></i>Coming Soon\n                            </span>\n                        </div>\n                    `}\n                    \n                    <div class=\"absolute bottom-3 left-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                        <button \n                            onclick=\"window.location.href='/blog/${movie.blog_slug || movie.slug}'\"\n                            class=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center\"\n                        >\n                            <i class=\"fas fa-book-open mr-2\"></i>\n                            Read Review\n                        </button>\n                    </div>\n                </div>\n                \n                <div class=\"p-4\">\n                    <h3 class=\"font-bold text-lg text-gray-800 mb-2 line-clamp-2\">${movie.title}</h3>\n                    \n                    ${movie.excerpt ? `\n                        <p class=\"text-gray-600 text-sm mb-3 line-clamp-3\">${movie.excerpt}</p>\n                    ` : ''}\n                    \n                    <div class=\"flex items-center justify-between text-sm text-gray-500 mb-3\">\n                        ${movie.release_year ? `\n                            <span class=\"flex items-center\">\n                                <i class=\"fas fa-calendar mr-1\"></i>\n                                ${movie.release_year}\n                            </span>\n                        ` : ''}\n                        \n                        ${movie.view_count ? `\n                            <span class=\"flex items-center\">\n                                <i class=\"fas fa-eye mr-1\"></i>\n                                ${this.formatViews(movie.view_count)} views\n                            </span>\n                        ` : ''}\n                    </div>\n                    \n                    <div class=\"flex gap-2\">\n                        <button \n                            onclick=\"this.viewMovie('${movie.slug}', '${movie.title}')\"\n                            class=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium\"\n                        >\n                            <i class=\"fas fa-play mr-2\"></i>Watch Now\n                        </button>\n                        \n                        <button \n                            onclick=\"this.shareMovie('${movie.slug}', '${movie.title}')\"\n                            class=\"bg-gray-200 text-gray-700 py-2 px-3 rounded-lg hover:bg-gray-300 transition-colors\"\n                            title=\"Share Movie\"\n                        >\n                            <i class=\"fas fa-share-alt\"></i>\n                        </button>\n                        \n                        <button \n                            onclick=\"this.toggleFavorite('${movie.id}')\"\n                            class=\"favorite-btn bg-gray-200 text-gray-700 py-2 px-3 rounded-lg hover:bg-red-100 hover:text-red-600 transition-colors\"\n                            data-movie-id=\"${movie.id}\"\n                            title=\"Add to Favorites\"\n                        >\n                            <i class=\"far fa-heart\"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n\n    viewMovie(slug, title) {\n        this.trackEvent('movie_click', { movie_slug: slug, movie_title: title });\n        window.location.href = `/blog/${slug}`;\n    }\n\n    shareMovie(slug, title) {\n        if (navigator.share) {\n            navigator.share({\n                title: title,\n                text: `Check out this Doraemon movie: ${title}`,\n                url: `${window.location.origin}/blog/${slug}`\n            }).then(() => {\n                this.trackEvent('movie_shared', { movie_slug: slug, method: 'native' });\n            }).catch(console.error);\n        } else {\n            // Fallback to clipboard\n            const url = `${window.location.origin}/blog/${slug}`;\n            navigator.clipboard.writeText(url).then(() => {\n                this.showNotification('Movie link copied to clipboard!', 'success');\n                this.trackEvent('movie_shared', { movie_slug: slug, method: 'clipboard' });\n            }).catch(() => {\n                this.showShareModal(slug, title);\n            });\n        }\n    }\n\n    toggleFavorite(movieId) {\n        const favorites = this.getFavorites();\n        const index = favorites.indexOf(movieId);\n        const button = document.querySelector(`.favorite-btn[data-movie-id=\"${movieId}\"]`);\n        const icon = button.querySelector('i');\n        \n        if (index > -1) {\n            // Remove from favorites\n            favorites.splice(index, 1);\n            icon.className = 'far fa-heart';\n            button.classList.remove('text-red-600');\n            this.showNotification('Removed from favorites', 'info');\n        } else {\n            // Add to favorites\n            favorites.push(movieId);\n            icon.className = 'fas fa-heart';\n            button.classList.add('text-red-600');\n            this.showNotification('Added to favorites!', 'success');\n        }\n        \n        localStorage.setItem('doraemon_favorites', JSON.stringify(favorites));\n        this.trackEvent('favorite_toggle', { movie_id: movieId, action: index > -1 ? 'remove' : 'add' });\n    }\n\n    getFavorites() {\n        try {\n            return JSON.parse(localStorage.getItem('doraemon_favorites') || '[]');\n        } catch {\n            return [];\n        }\n    }\n\n    handleSearch(event) {\n        const query = event.target.value.toLowerCase().trim();\n        \n        if (!query) {\n            this.renderMovies(this.movies);\n            return;\n        }\n        \n        const filteredMovies = this.movies.filter(movie => \n            movie.title.toLowerCase().includes(query) ||\n            (movie.excerpt && movie.excerpt.toLowerCase().includes(query))\n        );\n        \n        this.renderMovies(filteredMovies);\n        this.trackEvent('search_performed', { query, results_count: filteredMovies.length });\n    }\n\n    handleFilter(event) {\n        const filterType = event.target.dataset.filter;\n        let filteredMovies = [...this.movies];\n        \n        // Remove active class from all filter buttons\n        document.querySelectorAll('.filter-btn').forEach(btn => {\n            btn.classList.remove('bg-blue-600', 'text-white');\n            btn.classList.add('bg-gray-200', 'text-gray-700');\n        });\n        \n        // Add active class to clicked button\n        event.target.classList.remove('bg-gray-200', 'text-gray-700');\n        event.target.classList.add('bg-blue-600', 'text-white');\n        \n        switch (filterType) {\n            case 'all':\n                // Show all movies\n                break;\n            case 'available':\n                filteredMovies = filteredMovies.filter(movie => \n                    movie.video_embed_url || movie.telegram_file_id\n                );\n                break;\n            case 'recent':\n                filteredMovies = filteredMovies.sort((a, b) => \n                    new Date(b.created_at) - new Date(a.created_at)\n                ).slice(0, 6);\n                break;\n            case 'popular':\n                filteredMovies = filteredMovies.sort((a, b) => \n                    (b.view_count || 0) - (a.view_count || 0)\n                );\n                break;\n        }\n        \n        this.renderMovies(filteredMovies);\n        this.trackEvent('filter_applied', { filter_type: filterType, results_count: filteredMovies.length });\n    }\n\n    initializeLazyLoading() {\n        const images = document.querySelectorAll('img.lazy-load');\n        \n        if ('IntersectionObserver' in window) {\n            const imageObserver = new IntersectionObserver((entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        const img = entry.target;\n                        this.loadImage(img);\n                        observer.unobserve(img);\n                    }\n                });\n            });\n            \n            images.forEach(img => imageObserver.observe(img));\n        } else {\n            // Fallback for browsers without Intersection Observer\n            images.forEach(img => this.loadImage(img));\n        }\n    }\n\n    loadImage(img) {\n        const src = img.dataset.src;\n        if (src) {\n            img.src = src;\n            img.classList.add('fade-in');\n            img.onerror = () => {\n                img.src = '/static/images/placeholder-movie.jpg';\n            };\n        }\n    }\n\n    setupBackToTop() {\n        const backToTopBtn = document.createElement('button');\n        backToTopBtn.id = 'back-to-top';\n        backToTopBtn.className = 'fixed bottom-6 right-6 bg-blue-600 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition-all duration-300 opacity-0 pointer-events-none z-50';\n        backToTopBtn.innerHTML = '<i class=\"fas fa-arrow-up\"></i>';\n        backToTopBtn.onclick = () => {\n            window.scrollTo({ top: 0, behavior: 'smooth' });\n            this.trackEvent('back_to_top_click');\n        };\n        \n        document.body.appendChild(backToTopBtn);\n        \n        window.addEventListener('scroll', () => {\n            if (window.pageYOffset > 300) {\n                backToTopBtn.classList.remove('opacity-0', 'pointer-events-none');\n            } else {\n                backToTopBtn.classList.add('opacity-0', 'pointer-events-none');\n            }\n        });\n    }\n\n    setupMobileNav() {\n        const mobileMenuBtn = document.querySelector('.mobile-menu-btn');\n        const mobileMenu = document.querySelector('.mobile-menu');\n        \n        if (mobileMenuBtn && mobileMenu) {\n            mobileMenuBtn.addEventListener('click', () => {\n                mobileMenu.classList.toggle('hidden');\n                this.trackEvent('mobile_menu_toggle');\n            });\n        }\n    }\n\n    setupScrollAnimations() {\n        const animateElements = document.querySelectorAll('.animate-on-scroll');\n        \n        if ('IntersectionObserver' in window) {\n            const animationObserver = new IntersectionObserver((entries) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        entry.target.classList.add('animate-fade-in-up');\n                    }\n                });\n            }, { threshold: 0.1 });\n            \n            animateElements.forEach(el => animationObserver.observe(el));\n        }\n    }\n\n    animateMovieCards() {\n        const cards = document.querySelectorAll('.movie-card');\n        cards.forEach((card, index) => {\n            setTimeout(() => {\n                card.classList.add('animate-fade-in-up');\n            }, index * 100);\n        });\n    }\n\n    setupServiceWorker() {\n        if ('serviceWorker' in navigator && window.location.protocol === 'https:') {\n            navigator.serviceWorker.register('/sw.js')\n                .then(registration => {\n                    console.log('ServiceWorker registered:', registration);\n                })\n                .catch(error => {\n                    console.log('ServiceWorker registration failed:', error);\n                });\n        }\n    }\n\n    initializeTooltips() {\n        const tooltipElements = document.querySelectorAll('[title]');\n        tooltipElements.forEach(el => {\n            el.addEventListener('mouseenter', this.showTooltip.bind(this));\n            el.addEventListener('mouseleave', this.hideTooltip.bind(this));\n        });\n    }\n\n    showTooltip(event) {\n        const tooltip = document.createElement('div');\n        tooltip.className = 'tooltip absolute bg-gray-800 text-white text-sm px-2 py-1 rounded z-50 pointer-events-none';\n        tooltip.textContent = event.target.getAttribute('title');\n        \n        document.body.appendChild(tooltip);\n        \n        const rect = event.target.getBoundingClientRect();\n        tooltip.style.left = rect.left + (rect.width / 2) - (tooltip.offsetWidth / 2) + 'px';\n        tooltip.style.top = rect.top - tooltip.offsetHeight - 5 + 'px';\n        \n        event.target.setAttribute('data-original-title', event.target.getAttribute('title'));\n        event.target.removeAttribute('title');\n        event.target.tooltipElement = tooltip;\n    }\n\n    hideTooltip(event) {\n        if (event.target.tooltipElement) {\n            event.target.tooltipElement.remove();\n            event.target.tooltipElement = null;\n        }\n        \n        if (event.target.getAttribute('data-original-title')) {\n            event.target.setAttribute('title', event.target.getAttribute('data-original-title'));\n            event.target.removeAttribute('data-original-title');\n        }\n    }\n\n    handleOnline() {\n        this.showNotification('You are back online!', 'success');\n        this.trackEvent('connection_restored');\n    }\n\n    handleOffline() {\n        this.showNotification('You are offline. Some features may not work.', 'warning', 5000);\n        this.trackEvent('connection_lost');\n    }\n\n    handleError(event) {\n        console.error('JavaScript Error:', event.error);\n        this.trackEvent('javascript_error', { \n            message: event.error?.message,\n            filename: event.filename,\n            lineno: event.lineno\n        });\n    }\n\n    handleUnhandledRejection(event) {\n        console.error('Unhandled Promise Rejection:', event.reason);\n        this.trackEvent('promise_rejection', { reason: event.reason?.message });\n    }\n\n    showLoadingState() {\n        const container = document.getElementById('movies-grid');\n        if (container) {\n            container.innerHTML = this.getLoadingHTML();\n        }\n        this.loading = true;\n    }\n\n    hideLoadingState() {\n        this.loading = false;\n    }\n\n    showError(message, retry = false) {\n        const container = document.getElementById('movies-grid');\n        if (container) {\n            container.innerHTML = this.getErrorHTML(message, retry);\n        }\n    }\n\n    showNotification(message, type = 'info', duration = 3000) {\n        const notification = document.createElement('div');\n        notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full ${\n            type === 'success' ? 'bg-green-500' :\n            type === 'error' ? 'bg-red-500' :\n            type === 'warning' ? 'bg-yellow-500' :\n            'bg-blue-500'\n        } text-white`;\n        \n        notification.innerHTML = `\n            <div class=\"flex items-center\">\n                <i class=\"fas ${\n                    type === 'success' ? 'fa-check-circle' :\n                    type === 'error' ? 'fa-exclamation-circle' :\n                    type === 'warning' ? 'fa-exclamation-triangle' :\n                    'fa-info-circle'\n                } mr-2\"></i>\n                <span>${message}</span>\n                <button onclick=\"this.parentElement.parentElement.remove()\" class=\"ml-4 text-white/80 hover:text-white\">\n                    <i class=\"fas fa-times\"></i>\n                </button>\n            </div>\n        `;\n        \n        document.body.appendChild(notification);\n        \n        // Animate in\n        setTimeout(() => {\n            notification.classList.remove('translate-x-full');\n        }, 100);\n        \n        // Auto remove\n        setTimeout(() => {\n            notification.classList.add('translate-x-full');\n            setTimeout(() => notification.remove(), 300);\n        }, duration);\n    }\n\n    getLoadingHTML() {\n        return `\n            <div class=\"flex items-center justify-center py-12\">\n                <div class=\"text-center\">\n                    <div class=\"inline-flex items-center px-4 py-2 bg-blue-100 rounded-lg\">\n                        <svg class=\"animate-spin h-5 w-5 text-blue-600 mr-3\" viewBox=\"0 0 24 24\">\n                            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\" fill=\"none\"></circle>\n                            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                        <span class=\"text-blue-800 font-medium\">Loading awesome Doraemon movies...</span>\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n\n    getErrorHTML(message, retry = false) {\n        return `\n            <div class=\"text-center py-12\">\n                <div class=\"inline-flex flex-col items-center max-w-md mx-auto\">\n                    <div class=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mb-4\">\n                        <i class=\"fas fa-exclamation-triangle text-red-600 text-2xl\"></i>\n                    </div>\n                    <h3 class=\"text-xl font-bold text-gray-800 mb-2\">Oops! Something went wrong</h3>\n                    <p class=\"text-gray-600 mb-6\">${message}</p>\n                    ${retry ? `\n                        <div class=\"space-x-4\">\n                            <button onclick=\"location.reload()\" class=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\n                                <i class=\"fas fa-refresh mr-2\"></i>Try Again\n                            </button>\n                            <button onclick=\"window.location.href='/'\" class=\"bg-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\">\n                                <i class=\"fas fa-home mr-2\"></i>Go Home\n                            </button>\n                        </div>\n                    ` : ''}\n                </div>\n            </div>\n        `;\n    }\n\n    getEmptyState() {\n        return `\n            <div class=\"text-center py-12\">\n                <div class=\"inline-flex flex-col items-center max-w-md mx-auto\">\n                    <div class=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4\">\n                        <i class=\"fas fa-film text-gray-400 text-2xl\"></i>\n                    </div>\n                    <h3 class=\"text-xl font-bold text-gray-800 mb-2\">No Movies Found</h3>\n                    <p class=\"text-gray-600 mb-6\">We couldn't find any movies matching your criteria. Try adjusting your search or filters.</p>\n                    <button onclick=\"location.reload()\" class=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\n                        <i class=\"fas fa-refresh mr-2\"></i>Refresh\n                    </button>\n                </div>\n            </div>\n        `;\n    }\n\n    formatViews(count) {\n        if (count >= 1000000) {\n            return (count / 1000000).toFixed(1) + 'M';\n        } else if (count >= 1000) {\n            return (count / 1000).toFixed(1) + 'K';\n        }\n        return count.toString();\n    }\n\n    generateSessionId() {\n        return 'session_' + Math.random().toString(36).substr(2, 9) + '_' + Date.now();\n    }\n\n    debounce(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n\n    trackPageView() {\n        this.trackEvent('page_view', {\n            page: window.location.pathname,\n            title: document.title,\n            referrer: document.referrer\n        });\n    }\n\n    async trackEvent(eventType, data = {}) {\n        try {\n            await axios.post('/api/analytics', {\n                event_type: eventType,\n                page_url: window.location.href,\n                session_id: this.sessionId,\n                metadata: data\n            });\n        } catch (error) {\n            console.warn('Analytics tracking failed:', error);\n        }\n    }\n}\n\n// Initialize the app when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    window.doraemonApp = new DoraemonMoviesApp();\n});\n\n// Add CSS animations\nconst style = document.createElement('style');\nstyle.textContent = `\n    .fade-in {\n        opacity: 0;\n        animation: fadeIn 0.5s ease-in-out forwards;\n    }\n    \n    .animate-fade-in-up {\n        opacity: 0;\n        transform: translateY(20px);\n        animation: fadeInUp 0.6s ease-out forwards;\n    }\n    \n    .line-clamp-2 {\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    }\n    \n    .line-clamp-3 {\n        display: -webkit-box;\n        -webkit-line-clamp: 3;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    }\n    \n    @keyframes fadeIn {\n        from { opacity: 0; }\n        to { opacity: 1; }\n    }\n    \n    @keyframes fadeInUp {\n        from {\n            opacity: 0;\n            transform: translateY(20px);\n        }\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n    \n    .tooltip {\n        animation: fadeIn 0.2s ease-in-out;\n    }\n    \n    .movie-card:hover {\n        transform: translateY(-8px);\n        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n    }\n`;\ndocument.head.appendChild(style);